<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema
        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
        xmlns="https://example.org/istar-rl"
        targetNamespace="https://example.org/istar-rl"
        elementFormDefault="qualified"
        attributeFormDefault="unqualified">

    <!-- Root element -->
    <xsd:element name="actor" type="ActorType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Root element representing an actor in the iStar-RL framework.
                Contains all behavioral elements including predicates, preBoxes, indirectEffects, qualities, goals, and tasks.
                This model-driven approach facilitates the creation of training simulators for Reinforcement Learning (RL) agents by providing a structured representation of goals, actions, and their effects.
            ]]></xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <!-- ===== ActorType ===== -->
    <!-- Allows the subelements (predicates, preBoxes, indirectEffects, qualities, goals, tasks) -->
    <xsd:complexType name="ActorType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Complex type defining an actor's structure in the model.
                Contains:
                - Predicates
                - PreBoxes: Containers for preconditions
                - Indirect Effects
                - Qualities
                - Goals
                - Tasks
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="predicates" type="PredicatesType" minOccurs="0"/>
            <xsd:element name="preBoxes" type="PreBoxesType" minOccurs="0"/>
            <xsd:element name="indirectEffects" type="IndirectEffectsType" minOccurs="0"/>
            <xsd:element name="qualities" type="QualitiesType" minOccurs="0"/>
            <xsd:element name="goals" type="GoalsType" minOccurs="0"/>
            <xsd:element name="tasks" type="TasksType" minOccurs="0"/>
        </xsd:all>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
                    Attribute: name
                    Unique identifier for the actor.
                    Used to reference the actor within goals, tasks, and other model components.
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <!-- ===== Predicates ===== -->
    <xsd:complexType name="PredicatesType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Container for predicates defining the actor's state conditions.
                Each predicate represents a boolean condition that can influence the actor's behavior.
                Predicates are used to model the state of the environment and the actor's internal state, essential for RL agent decision-making.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="predicate" type="PredicateType"
                         minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Defines a single predicate.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="PredicateType" mixed="true">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Boolean condition with state management attributes.
                Attributes:
                - primitive: Indicates if the predicate is a basic, non-derived condition. (default: false)
                - init: Specifies the initial state of the predicate. (default: false)
                - exported: Determines if the predicate is visible to other actors or used in the exported state set for RL. (default: false)
                - description: Provides an explanation of the predicate.
                The content of the predicate element contains the identifier representing the condition.
                Used in preconditions, effects, and as part of the exported state for RL simulations.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="primitive" type="xsd:boolean" use="optional" default="false"/>
        <xsd:attribute name="init" type="xsd:boolean" use="optional" default="false"/>
        <xsd:attribute name="exported" type="xsd:boolean" use="optional" default="false"/>
        <xsd:attribute name="description" type="xsd:string" use="optional"/>
    </xsd:complexType>

    <!-- ===== PreBoxes ===== -->
    <xsd:complexType name="PreBoxesType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Container for precondition boxes.
                Each preBox defines a named boolean expression that serves as a precondition for goals or tasks.
                PreBoxes allow for the encapsulation of complex boolean conditions, facilitating reuse and clarity in goal and task definitions.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="preBox" type="PreBoxType"
                         minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Defines a single precondition box.
                        Attributes:
                        - name: Unique identifier for the preBox.
                        - description: Optional explanation of the preBox's purpose.
                        Contains the boolean expression representing the precondition, which can include references to predicates.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <!-- Each preBox can contain text (the boolean expression) -->
    <xsd:complexType name="PreBoxType" mixed="true">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Named container for boolean expressions.
                Example: (fuelLevel > 50) && (systemStatus == OK)
                Used to define preconditions.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
                    Attribute: name
                    Unique identifier for the preBox.
                    Used to reference the preBox within npr/pre of goals and tasks.
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="description" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
                    Attribute: description
                    Optional description providing details about the preBox.
                    Helps in understanding the purpose and usage of the precondition expression.
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <!-- ===== IndirectEffects ===== -->
    <xsd:complexType name="IndirectEffectsType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Container for indirect effects derived from actor behavior.
                Indirect effects represent outcomes that are not directly caused by tasks but result from the actor's actions and their interaction with the environment.
                They can depend on previous states or other effects, facilitating the modeling of complex dependencies within the RL environment.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="effect" type="IndirectEffectType"
                         minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Defines a single indirect effect.
                        Attributes:
                        - name: Unique identifier for the indirect effect.
                        - exported: Indicates if the effect is visible to other actors. (default: false)
                        - description: Provides a human-readable explanation of the effect.
                        The formula element represents the mathematical or logical expression defining the effect, potentially referencing cross-run elements.
                        Indirect effects are essential for modeling state dependencies and temporal dynamics in RL simulations.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="IndirectEffectType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Derived effect with formulaic representation.
                Attributes:
                - name: Unique identifier for the indirect effect.
                - exported: Indicates if the effect is visible to other actors. (default: false)
                - description: Provides a human-readable explanation of the effect.
                The formula element contains the expression that defines how the indirect effect is calculated, potentially involving cross-run elements to capture dependencies across episodes.
                Indirect effects are utilized to model the influence of previous states or actions on current outcomes, enabling more sophisticated RL training scenarios.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="formula" type="xsd:string" minOccurs="0" maxOccurs="1">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Element: formula
                        Defines the mathematical or logical formula representing the indirect effect.
                        Can reference cross-run elements to incorporate historical state information into the effect calculation.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
                    Attribute: name
                    Unique identifier for the indirect effect.
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="exported" type="xsd:boolean" use="optional" default="false"/>
        <xsd:attribute name="description" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
                    Attribute: description
                    Optional description providing details about the indirect effect.
                    Helps in understanding the role and computation of the indirect effect within the model.
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <!-- ===== Qualities ===== -->
    <!-- Removes the old <contributesTo>; all numeric expressions are in the <value> directly -->
    <xsd:complexType name="QualitiesType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Container for quality attributes with numeric values.
                Qualities represent measurable aspects of the actor's state or performance, influencing the RL agent's reward structure.
                Each quality can be a root quality aggregating other qualities, facilitating hierarchical evaluation of the actor's performance.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="quality" type="QualityType"
                         minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Defines a single quality attribute.
                        Attributes:
                        - name: Unique identifier for the quality.
                        - description: Optional explanation of the quality.
                        - exported: Indicates if the quality is visible externally or used in the exported state set for RL. (default: false)
                        - root: Marks the quality as a root attribute for analysis. (default: false)
                        The value element contains the numeric expression representing the quality's value, which can aggregate multiple contributions from effects.
                        Root qualities typically represent aggregate measures like overall performance or satisfaction.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="QualityType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Numeric quality attribute with optional value expression.
                Attributes:
                - name: Unique identifier for the quality.
                - description: Optional explanation of the quality.
                - exported: Indicates if the quality is visible externally or used in the exported state set for RL. (default: false)
                - root: Marks the quality as a root attribute for analysis. (default: false)
                The value element holds the numeric expression defining the quality's value, which can include contributions from multiple effects.
                Qualities are essential for defining the reward structure in RL simulations, allowing the agent to optimize based on these measures.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="value" type="xsd:string" minOccurs="0" maxOccurs="1">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Element: value
                        Contains the numeric expression representing the quality's value.
                        Expressions can include contributions from multiple effects, allowing for complex aggregation of quality metrics.
                        For root qualities, this typically represents an aggregate measure of overall performance or satisfaction.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="description" type="xsd:string" use="optional"/>
        <xsd:attribute name="exported" type="xsd:boolean" use="optional" default="false"/>
        <xsd:attribute name="root" type="xsd:boolean" use="optional" default="false"/>
    </xsd:complexType>

    <!-- ===== Goals ===== -->
    <!-- Allows <pre> or <npr> as direct children, then an optional <refinement> -->
    <xsd:complexType name="GoalsType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Container for actor goals with refinement structures.
                Goals represent the objectives the actor aims to achieve, which can be decomposed into sub-goals or tasks.
                Supports modeling of goal hierarchies and dependencies, essential for defining the agent's objectives in RL simulations.
                Includes constructs for defining preconditions and negative preconditions that influence goal fulfillment.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="goal" type="GoalType"
                         minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Defines a single goal.
                        Attributes:
                        - name: Unique identifier for the goal.
                        - description: Optional explanation of the goal.
                        - root: Indicates if the goal is a root objective. (default: false)
                        - episodeLength: Specifies the temporal scope of the goal, particularly important for modeling episodes in RL simulations.
                        Each goal can have preconditions (pre or npr) and an optional refinement structure to decompose the goal into sub-goals or tasks.
                        Supports the modeling of episodes and multi-run scenarios in RL training environments.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GoalType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Strategic objective with preconditions and decomposition.
                Attributes:
                - name: Unique identifier for the goal.
                - root: Marks the goal as a root objective. (default: false)
                - description: Optional explanation of the goal.
                - episodeLength: Defines the temporal scope for achieving the goal, used to model episodes in RL simulations.
                Goals can include preconditions (pre or npr) and can be refined into sub-goals or tasks using the refinement element.
                Supports the definition of episodes and multi-run scenarios by specifying episode lengths and cross-run elements.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <!-- allow multiple <pre> or <npr> lines to capture your new usage -->
            <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <xsd:element name="pre" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Element: pre
                            Specifies a precondition by referencing a preBox, goal, task, or effect.
                            Used to define conditions that must be met for the goal to be achievable.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="npr" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Element: npr
                            Specifies a negative precondition by referencing a preBox, goal, task, or effect.
                            Used to define conditions that must not be met for the goal to be achievable.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:choice>

            <xsd:element name="refinement" type="RefinementType"
                         minOccurs="0" maxOccurs="1">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Element: refinement
                        Defines how the goal is decomposed into sub-goals or tasks.
                        Supports hierarchical goal structures, enabling the modeling of complex objective fulfillment processes.
                        Essential for breaking down high-level goals into actionable steps for RL agents.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>

        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="root" type="xsd:boolean" use="optional" default="false"/>
        <xsd:attribute name="description" type="xsd:string" use="optional"/>
        <xsd:attribute name="episodeLength" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
                    Attribute: episodeLength
                    Specifies the temporal scope of the goal, indicating how many runs constitute an episode in RL simulations.
                    Used to model multi-run episodes where an episode may consist of multiple goal runs.
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="RefinementType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Goal decomposition structure (AND/OR) with child references.
                Used to break down a goal into smaller, more manageable sub-goals or tasks.
                Attributes:
                - type: Specifies the type of refinement, typically "AND" for all children being necessary or "OR" for any one child being sufficient.
                Supports the hierarchical structuring of goals, enabling complex goal fulfillment paths essential for RL agent training.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:choice minOccurs="1" maxOccurs="unbounded">
                <xsd:element name="childGoal" type="ChildRefType">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Element: childGoal
                            References a sub-goal within the refinement structure.
                            Enables hierarchical goal definitions, allowing RL agents to decompose complex objectives into simpler tasks.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="childTask" type="ChildRefType">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Element: childTask
                            References a sub-task within the refinement structure.
                            Connects tasks directly to goals, facilitating action-based objective fulfillment in RL simulations.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="type" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
                    Attribute: type
                    Defines the nature of the refinement, such as "AND" for all children being necessary or "OR" for any one child being sufficient.
                    Determines how the satisfaction of child goals or tasks contributes to the parent goal's fulfillment.
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="ChildRefType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Reference to a child goal or task within a refinement structure.
                Attributes:
                - ref: Identifier for the referenced child element (goal or task).
                Facilitates the linking of sub-goals and sub-tasks to their parent goals, enabling hierarchical goal modeling essential for RL agent training.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="ref" type="xsd:string" use="required"/>
    </xsd:complexType>

    <!-- ===== Tasks ===== -->
    <!-- Allows <pre>, and <npr> as described; then one effectGroup -->
    <xsd:complexType name="TasksType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Container for tasks that the actor can perform.
                Tasks represent the actions or operations the actor can execute to achieve its goals.
                Essential for defining the action space available to RL agents within the simulation environment.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="task" type="TaskType"
                         minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Defines a single task.
                        Attributes:
                        - name: Unique identifier for the task.
                        - description: Optional explanation of the task's purpose.
                        Each task can have preconditions (pre or npr) and an optional effectGroup detailing the outcomes of the task.
                        Tasks are the primary actions through which RL agents interact with the environment, influencing state and quality attributes.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="TaskType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Represents an executable task with associated preconditions and effects.
                Attributes:
                - name: Unique identifier for the task.
                - description: Optional explanation of the task's purpose.
                Tasks can include pre/npr and can specify the effects of executing the task through the effectGroup element.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <!-- This choice block allows multiple lines of pre / npr -->
            <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <xsd:element name="pre" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Element: pre
                            Specifies a precondition by referencing a preBox, goal, task, or effect.
                            Ensures that certain conditions are met before the task can be executed.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="npr" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Element: npr
                            Specifies a negative precondition by referencing a preBox, goal, task, or effect.
                            Ensures that certain conditions are not met before the task can be executed.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:choice>

            <xsd:element name="effectGroup" type="EffectGroupType"
                         minOccurs="0" maxOccurs="1">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Element: effectGroup
                        Defines the group of effects resulting from the execution of the task.
                        Each effect within the group can have different probabilities, allowing for the modeling of stochastic task outcomes essential for RL simulations.
                        Effect groups enable the representation of multiple possible outcomes from a single task execution.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="description" type="xsd:string" use="optional"/>
    </xsd:complexType>

    <!-- Effect group within a task -->
    <xsd:complexType name="EffectGroupType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Group of effects resulting from the execution of a task.
                Each effect represents a possible outcome of the task, including its probability and conditions.
                Allows for the modeling of non-deterministic task outcomes, which are crucial for simulating realistic RL environments.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="effect" type="EffectType"
                         minOccurs="1" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Defines a single effect within the effect group.
                        Each effect specifies the outcome of the task, including whether it satisfies the task's objectives and the probability of occurrence.
                        Effects can include conditions that turn predicates true or false, influencing the state and quality attributes.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <!-- Individual effect: requires name, probability; has optional satisfying, description;
         can have multiple <turnsTrue> / <turnsFalse> lines. -->
    <xsd:complexType name="EffectType">
        <xsd:annotation>
            <xsd:documentation><![CDATA[
                Represents an effect of a task with associated probabilities and conditions.
                Attributes:
                - name: Unique identifier for the effect.
                - satisfying: Indicates if the effect satisfies the task's objective. (default: true)
                - probability: The probability of the effect occurring. Required.
                - description: Optional explanation of the effect's significance.
                Effects can include conditions that turn predicates true or false, allowing the modeling of state changes resulting from task execution.
                Essential for defining the stochastic nature of tasks in RL simulations.
            ]]></xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="turnsTrue" type="xsd:string"
                         minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Element: turnsTrue
                        Specifies a predicate that is set to true when the effect occurs.
                        Used to model positive state changes resulting from task execution.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="turnsFalse" type="xsd:string"
                         minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
                        Element: turnsFalse
                        Specifies a predicate that is set to false when the effect occurs.
                        Used to model negative state changes resulting from task execution.
                    ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:element>

            <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <xsd:element name="pre" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Element: pre
                            Specifies a precondition associated with the effect.
                            Ensures that certain conditions are met for the effect to be applicable.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="npr" type="xsd:string">
                    <xsd:annotation>
                        <xsd:documentation><![CDATA[
                            Element: npr
                            Specifies a negative precondition associated with the effect.
                            Ensures that certain conditions are not met for the effect to be applicable.
                        ]]></xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:choice>
        </xsd:sequence>

        <xsd:attribute name="name" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
                    Attribute: name
                    Unique identifier for the effect.
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="satisfying" type="xsd:boolean" use="optional" default="true"/>
        <xsd:attribute name="probability" type="xsd:float" use="required"/>
        <xsd:attribute name="description" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation><![CDATA[
                    Attribute: description
                    Optional description providing details about the effect.
                    Helps in understanding the significance and impact of the effect within the model.
                ]]></xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

</xsd:schema>
